name: Android Auto Release

on:
  push:
    branches: [ main ]

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Needed to get full git history

    - name: Calculate next version
      id: version
      run: |
        # Check if any tags exist
        git fetch --tags
        if ! git describe --tags --abbrev=0 2>/dev/null; then
          # No tags exist - start with 1.0.0
          echo "No existing tags found - starting with v1.0.0"
          NEW_VERSION="1.0.0"
        else
          # Tags exist - increment patch version
          LATEST_TAG=$(git describe --tags --abbrev=0)
          echo "Latest tag: $LATEST_TAG"
          
          VERSION=${LATEST_TAG#v}
          MAJOR=$(echo $VERSION | cut -d. -f1)
          MINOR=$(echo $VERSION | cut -d. -f2)
          PATCH=$(echo $VERSION | cut -d. -f3)
          
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"
        fi
        
        NEW_TAG="v$NEW_VERSION"
        echo "New version: $NEW_VERSION"
        echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "tag=$NEW_TAG" >> $GITHUB_OUTPUT

    - name: Update version in build.gradle
      run: |
        # Update versionCode (using timestamp)
        sed -i "s/versionCode [0-9]*/versionCode $(date +%Y%m%d)/" app/build.gradle.kts
        
        # Update versionName
        sed -i "s/versionName \".*\"/versionName \"${{ steps.version.outputs.version }}\"/" app/build.gradle.kts
        
        # Display the changes
        cat app/build.gradle.kts | grep version

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Build with Gradle
      run: |
        chmod +x gradlew
        ./gradlew assembleRelease

    - name: Create Git tag
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git tag -a ${{ steps.version.outputs.tag }} -m "Release ${{ steps.version.outputs.version }}"
        git push origin ${{ steps.version.outputs.tag }}

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.tag }}
        release_name: Release ${{ steps.version.outputs.version }}
        body: "Automated release for commit ${{ github.sha }}"
        draft: false
        prerelease: false

    - name: Upload Release APK
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ env.UPLOAD_URL }}
        asset_path: app/build/outputs/apk/release/app-release.apk
        asset_name: app-release-${{ steps.version.outputs.version }}.apk
        asset_content_type: application/vnd.android.package-archive

    - name: Commit version updates
      run: |
        git add app/build.gradle
        git commit -m "Update version to ${{ steps.version.outputs.version }} [skip ci]"
        git push
